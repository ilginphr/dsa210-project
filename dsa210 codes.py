# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bCUrSAbHMIF_ePxVNDJjeyrfyylf7M_V
"""

# WeightAnalysis.ipynb

# ----------------------------
# 1. Import Libraries
# ----------------------------
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from scipy.stats import pearsonr, ttest_rel
import statsmodels.api as sm

# ----------------------------
# 2. Load the Dataset
# ----------------------------
file_path = "WeightStudy-ilginpuhur.xlsx"
data = pd.read_excel(file_path)

# ----------------------------
# 3. Data Cleaning
# ----------------------------
# Convert 'Date' column to datetime
data['Date'] = pd.to_datetime(data['Date'], errors='coerce')

# Check for missing values
print("Missing values per column:\n", data.isnull().sum())

# Drop rows with missing values (or use fillna if appropriate)
data.dropna(inplace=True)

# Create a new feature: Caloric Deficit
data['Caloric Deficit'] = data['Burned Calories'] - data['Caloric Intake']

# ----------------------------
# 4. Exploratory Data Analysis
# ----------------------------
# Line plot of weight over time
plt.figure(figsize=(10, 5))
plt.plot(data['Date'], data['Weight (kg)'], marker='o')
plt.title('Weight Over Time')
plt.xlabel('Date')
plt.ylabel('Weight (kg)')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

# Scatter plots
plt.figure(figsize=(6, 4))
sns.scatterplot(x='Caloric Intake', y='Weight (kg)', data=data)
plt.title('Caloric Intake vs. Weight')
plt.show()

plt.figure(figsize=(6, 4))
sns.scatterplot(x='Burned Calories', y='Weight (kg)', data=data)
plt.title('Burned Calories vs. Weight')
plt.show()

plt.figure(figsize=(6, 4))
sns.scatterplot(x='Water Consumption (L)', y='Weight (kg)', data=data)
plt.title('Water Consumption vs. Weight')
plt.show()

plt.figure(figsize=(6, 4))
sns.scatterplot(x='Caloric Deficit', y='Weight (kg)', data=data)
plt.title('Caloric Deficit vs. Weight')
plt.show()

# Correlation matrix
plt.figure(figsize=(8, 6))
sns.heatmap(data.corr(), annot=True, cmap='coolwarm', linewidths=0.5)
plt.title('Correlation Matrix')
plt.tight_layout()
plt.show()

# Additional EDA Visualizations
# Box plot: Weight vs Water Consumption levels
plt.figure(figsize=(6, 4))
sns.boxplot(x='Water Consumption (L)', y='Weight (kg)', data=data)
plt.title('Weight Distribution by Water Consumption Level')
plt.show()

# Line plot: Caloric Intake vs Burned Calories over time
plt.figure(figsize=(10, 5))
plt.plot(data['Date'], data['Caloric Intake'], marker='o', label='Caloric Intake')
plt.plot(data['Date'], data['Burned Calories'], marker='s', label='Burned Calories')
plt.title('Caloric Intake vs Burned Calories Over Time')
plt.xlabel('Date')
plt.ylabel('Calories')
plt.legend()
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

# Histograms
plt.figure(figsize=(6, 4))
sns.histplot(data['Weight (kg)'], bins=10, kde=True)
plt.title('Histogram of Weight')
plt.xlabel('Weight (kg)')
plt.ylabel('Frequency')
plt.tight_layout()
plt.show()

plt.figure(figsize=(6, 4))
sns.histplot(data['Caloric Intake'], bins=10, kde=True)
plt.title('Histogram of Caloric Intake')
plt.xlabel('Calories')
plt.ylabel('Frequency')
plt.tight_layout()
plt.show()

plt.figure(figsize=(6, 4))
sns.histplot(data['Burned Calories'], bins=10, kde=True)
plt.title('Histogram of Burned Calories')
plt.xlabel('Calories Burned')
plt.ylabel('Frequency')
plt.tight_layout()
plt.show()

# ----------------------------
# 5. Hypothesis Testing
# ----------------------------
# Pearson correlation between Caloric Intake and Weight
corr_intake, pval_intake = pearsonr(data['Caloric Intake'], data['Weight (kg)'])
print(f"Pearson correlation between Caloric Intake and Weight: {corr_intake:.3f}, p-value: {pval_intake:.4f}")
if pval_intake < 0.05:
    print("--> The correlation is statistically significant.")
else:
    print("--> The correlation is not statistically significant.")

# Pearson correlation between Burned Calories and Weight
corr_burned, pval_burned = pearsonr(data['Burned Calories'], data['Weight (kg)'])
print(f"Pearson correlation between Burned Calories and Weight: {corr_burned:.3f}, p-value: {pval_burned:.4f}")
if pval_burned < 0.05:
    print("--> The correlation is statistically significant.")
else:
    print("--> The correlation is not statistically significant.")

# Pearson correlation between Water Consumption and Weight
corr_water, pval_water = pearsonr(data['Water Consumption (L)'], data['Weight (kg)'])
print(f"Pearson correlation between Water Consumption and Weight: {corr_water:.3f}, p-value: {pval_water:.4f}")
if pval_water < 0.05:
    print("--> The correlation is statistically significant.")
else:
    print("--> The correlation is not statistically significant.")

# Pearson correlation between Caloric Deficit and Weight
corr_deficit, pval_deficit = pearsonr(data['Caloric Deficit'], data['Weight (kg)'])
print(f"Pearson correlation between Caloric Deficit and Weight: {corr_deficit:.3f}, p-value: {pval_deficit:.4f}")
if pval_deficit < 0.05:
    print("--> The correlation is statistically significant.")
else:
    print("--> The correlation is not statistically significant.")